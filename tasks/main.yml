---
- name: Create logstash docker user
  user:
    name: "{{ logstash_docker_user }}"
    home: "{{ logstash_docker_directory }}"
    createhome: yes
    groups: docker
    append: yes
    shell: /bin/bash
  become: yes
  tags:
    - logstash_docker

- name: Pull logstash docker image
  docker_image:
    name: "{{ logstash_docker_image_name }}:{{ logstash_docker_version }}"
    force: "{{ logstash_docker_pull_images|bool }}"
  become: yes
  become_user: "{{ logstash_docker_user }}"
  tags:
    - logstash_docker
    - logstash_docker_testing

- name: Create pipeline directory
  file:
    path: "{{ logstash_docker_directory }}/pipeline"
    state: directory
    owner: 1000
    group: 1000
    mode: 0770
  become: yes
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Create patterns directory
  file:
    path: "{{ logstash_docker_directory }}/patterns"
    state: directory
    owner: 1000
    group: 1000
    mode: 0770
  become: yes
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy

- name: Create sincedb directory for S3 input
  file:
    path: "{{ logstash_docker_directory }}/sincedb"
    state: directory
    owner: 1000
    group: 1000
    mode: 0777
  become: yes
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing
  when: logstash_docker_inputs.s3 is defined

- name: Template docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: "{{ logstash_docker_directory }}/docker-compose.yml"
    mode: 0750
  become: yes
  become_user: "{{ logstash_docker_user }}"
  no_log: "{{ not logstash_docker_log_sensitive }}"
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Template custom-docker-entrypoint
  template:
    src: custom-docker-entrypoint.j2
    dest: "{{ logstash_docker_directory }}/custom-docker-entrypoint"
    mode: 0755
  become: yes
  become_user: "{{ logstash_docker_user }}"
  no_log: "{{ not logstash_docker_log_sensitive }}"
  when: logstash_docker_outputs.amazon_es is defined
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Template logstash settings
  template:
    src: logstash.yml.j2
    dest: "{{ logstash_docker_directory }}/logstash.yml"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  no_log: "{{ not logstash_docker_log_sensitive }}"
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Template logstash config
  template:
    src: logstash.conf.j2
    dest: "{{ logstash_docker_directory }}/pipeline/logstash.conf"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  no_log: "{{ not logstash_docker_log_sensitive }}"
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Template logstash jvm.options
  template:
    src: jvm.options.j2
    dest: "{{ logstash_docker_directory }}/jvm.options"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  no_log: "{{ not logstash_docker_log_sensitive }}"
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Copy logstash TLS server key
  copy:
    content: "{{ logstash_docker_tls_key }}"
    dest: "{{ logstash_docker_directory }}/server-key.pem"
    owner: "{{ logstash_docker_user }}"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  no_log: "{{ not logstash_docker_log_sensitive }}"
  when: logstash_docker_tls_key != ""
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Copy logstash TLS server cert
  copy:
    content: "{{ logstash_docker_tls_cert }}"
    dest: "{{ logstash_docker_directory }}/server.pem"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  when: logstash_docker_tls_cert != ""
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Copy logstash TLS CA cert
  copy:
    content: "{{ logstash_docker_tls_cacert }}"
    dest: "{{ logstash_docker_directory }}/ca.pem"
    owner: 1000
    group: 1000
    mode: 0600
  become: yes
  when: logstash_docker_tls_cacert != ""
  notify:
    - restart logstash-docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing

- name: Start logstash docker
  docker_service:
    project_src: "{{ logstash_docker_directory }}"
    state: present
  become: yes
  become_user: "{{ logstash_docker_user }}"
  register: start_logstash_docker
  tags:
    - logstash_docker
    - logstash_docker_deploy
    - logstash_docker_testing
