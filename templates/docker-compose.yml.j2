version: '2.2'
services:
  logstash_docker:
    image: {{ logstash_docker_image_name }}:{{ logstash_docker_version }}
    volumes:
{% if logstash_docker_outputs.amazon_es is defined %}
      - ./custom-docker-entrypoint:/usr/local/bin/custom-docker-entrypoint
{% endif %}
      - ./pipeline:/usr/share/logstash/pipeline
      - ./patterns:/usr/share/logstash/patterns
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./jvm.options:/usr/share/logstash/config/jvm.options
{% if logstash_docker_inputs.s3 is defined %}
      - ./sincedb:/sincedb/
{% endif %}
{% if logstash_docker_tls_key != "" %}
      - ./server-key.pem:/server-key.pem:ro
{% endif %}
{% if logstash_docker_tls_cert != "" %}
      - ./server.pem:/server.pem:ro
{% endif %}
{% if logstash_docker_tls_cacert != "" %}
      - ./ca.pem:/ca.pem:ro
{% endif %}
    ports:
{% for input_k, input_v in logstash_docker_inputs.iteritems() %}
{% for k, v in input_v.iteritems() %}
{% if k == "port" %}
      - {{ v|e }}:{{ v|e }}
{% endif %}
{% endfor %}
{% endfor %}
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    restart: always
{% if logstash_docker_outputs.amazon_es is defined %}
    entrypoint:
      - /usr/local/bin/custom-docker-entrypoint
{% endif %}
{% if logstash_docker_stats_exporter_enable %}
  logstash_exporter:
    image: {{ logstash_docker_stats_exporter_image }}:{{ logstash_docker_stats_exporter_version }}
    entrypoint: ["/logstash_exporter", "--logstash.endpoint=http://logstash_docker:{{ logstash_docker_stats_api }}"]
    ports:
      - {{ logstash_docker_stats_exporter_port }}:{{ logstash_docker_stats_exporter_port }}
    restart: always
{% endif %}
